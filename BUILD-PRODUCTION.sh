#!/bin/bash

clear
echo "========================================"
echo "   ARMATEURS DU SAINT-LAURENT"
echo "   Build de Production React"
echo "========================================"
echo

# Nettoyer le dossier dist pr√©c√©dent
echo "[1/6] Nettoyage du dossier dist..."
if [ -d "dist" ]; then
    rm -rf dist
    echo "‚úÖ Ancien dossier dist supprim√©"
else
    echo "‚úÖ Pas d'ancien dossier dist √† supprimer"
fi

# V√©rifier Node.js
echo
echo "[2/6] V√©rification de Node.js..."
if ! command -v node &> /dev/null; then
    echo "‚ùå ERREUR: Node.js n'est pas install√©"
    echo
    echo "SOLUTION:"
    echo "1. Allez sur https://nodejs.org/"
    echo "2. T√©l√©chargez et installez Node.js LTS"
    echo "3. Relancez ce script"
    echo
    exit 1
fi
echo "‚úÖ Node.js d√©tect√©"

# Installation des d√©pendances
echo
echo "[3/6] Installation des d√©pendances..."
npm install
if [ $? -ne 0 ]; then
    echo "‚ùå ERREUR lors de l'installation des d√©pendances"
    echo
    echo "SOLUTIONS POSSIBLES:"
    echo "1. V√©rifiez votre connexion internet"
    echo "2. Supprimez node_modules et package-lock.json, puis relancez"
    echo "3. Ex√©cutez: npm cache clean --force"
    echo
    exit 1
fi
echo "‚úÖ D√©pendances install√©es"

# V√©rification TypeScript avec config d√©di√©e
echo
echo "[4/6] V√©rification TypeScript..."
npx tsc -p tsconfig.build.json --noEmit
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  Avertissements TypeScript d√©tect√©s, mais continuation du build..."
else
    echo "‚úÖ V√©rification TypeScript r√©ussie"
fi

# Build de production avec Vite
echo
echo "[5/6] G√©n√©ration du build de production..."
npx vite build
if [ $? -ne 0 ]; then
    echo "‚ùå ERREUR lors du build Vite"
    echo
    echo "SOLUTIONS POSSIBLES:"
    echo "1. V√©rifiez les erreurs TypeScript ci-dessus"
    echo "2. V√©rifiez que tous les imports sont corrects"
    echo "3. Supprimez node_modules et r√©installez"
    echo
    exit 1
fi
echo "‚úÖ Build de production g√©n√©r√©"

# V√©rification du build
echo
echo "[6/6] V√©rification du build..."

if [ ! -d "dist" ]; then
    echo "‚ùå ERREUR: Le dossier dist n'a pas √©t√© cr√©√©"
    exit 1
fi

if [ ! -f "dist/index.html" ]; then
    echo "‚ùå ERREUR: index.html manquant dans dist"
    exit 1
fi

# Cr√©er le fichier .htaccess
echo "Cr√©ation du fichier .htaccess..."
cat > dist/.htaccess << 'EOF'
RewriteEngine On
RewriteBase /
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.html [L]

<IfModule mod_expires.c>
ExpiresActive on
ExpiresByType text/css "access plus 1 year"
ExpiresByType application/javascript "access plus 1 year"
ExpiresByType image/png "access plus 1 year"
ExpiresByType image/jpg "access plus 1 year"
ExpiresByType image/jpeg "access plus 1 year"
ExpiresByType text/html "access plus 1 hour"
</IfModule>

<IfModule mod_headers.c>
Header always set X-Frame-Options "DENY"
Header always set X-Content-Type-Options "nosniff"
</IfModule>
EOF

echo "‚úÖ Fichier .htaccess cr√©√©"

# Afficher les informations finales
echo
echo "========================================"
echo "üéâ BUILD DE PRODUCTION R√âUSSI !"
echo "========================================"
echo
echo "üìÅ CONTENU DU BUILD :"
ls -la dist/
echo
echo "üìä TAILLE DU BUILD :"
du -sh dist/
echo
echo "üöÄ PR√äT POUR FILEZILLA :"
echo "1. Ouvrez FileZilla"
echo "2. Connectez-vous √† votre serveur"
echo "3. SUPPRIMEZ tout le contenu du serveur"
echo "4. Uploadez TOUT le contenu de 'dist/'"
echo "5. Testez: https://www.armateurs.ca/"
echo
echo "‚ú® VOTRE APPLICATION REACT EST PR√äTE !"
echo "- Interface compl√®te Armateurs du Saint-Laurent"
echo "- Processus d'inscription en 6 √©tapes"
echo "- Portail membre avec authentification"
echo "- Design responsive et optimis√©"
echo

chmod +x BUILD-PRODUCTION.sh